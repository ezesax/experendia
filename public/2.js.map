{"version":3,"sources":["webpack:///resources/js/pages/experience/Experience.vue","webpack:///./resources/js/pages/experience/Experience.vue?206c","webpack:///./resources/js/pages/experience/Experience.vue?4ab4","webpack:///./resources/js/pages/experience/Experience.vue?9d7a","webpack:///./resources/js/pages/experience/Experience.vue","webpack:///./resources/js/pages/experience/Experience.vue?9d6f","webpack:///./resources/js/pages/experience/Experience.vue?a729","webpack:///./resources/js/pages/experience/Experience.vue?4d22"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;AACA;AACA;AAEA;AACA,oBADA;AAEA;AACA;AADA,GAFA;AAKA;AAAA;AACA;AACA,mBADA;AAEA,gBAFA;AAGA,qBAHA;AAIA,oBAJA;AAKA,iBALA;AAMA,wBANA;AAOA,qBAPA;AAQA,sBARA;AASA;AATA,OADA;AAYA;AACA,oBADA;AAEA,sBAFA;AAGA,gBAHA;AAIA,iBAJA;AAKA,uBALA;AAMA,wBANA;AAOA,2BAPA;AAQA,wBARA;AASA,sBATA;AAUA,0BAVA;AAWA,iBAXA;AAYA,qBACA;AAAA;AAAA;AAAA,SADA,EAEA;AAAA;AAAA;AAAA,SAFA,EAGA;AAAA;AAAA;AAAA,SAHA,EAIA;AAAA;AAAA;AAAA,SAJA;AAZA,OAZA;AA+BA;AACA,yBADA;AAEA,iCAFA;AAGA,uBAHA;AAIA,+BAJA;AAKA,gBALA;AAMA,oBANA;AAOA,qBAPA;AAQA,qBARA;AASA,oBATA;AAUA,eAVA;AAWA,oBAXA;AAYA,gBAZA;AAaA,wBAbA;AAcA,mDAdA;AAeA,wBAfA;AAgBA,kBACA;AACA,oBADA;AAEA,wBAFA;AAGA,yBAHA;AAIA;AAJA,SADA,EAOA;AAAA;AAAA;AAAA,SAPA,EAQA;AAAA;AAAA;AAAA,SARA,EASA;AAAA;AAAA;AAAA,SATA,EAUA;AAAA;AAAA;AAAA,SAVA,EAWA;AAAA;AAAA;AAAA,SAXA,CAhBA;AA6BA,kBA7BA;AA8BA;AACA,0DADA;AAEA;AAFA,SA9BA;AAkCA,qBACA,WADA,EAEA,QAFA,EAGA,aAHA,EAIA,WAJA,CAlCA;AAwCA,wBACA,eADA,EAEA,eAFA,EAGA,cAHA,EAIA,aAJA;AAxCA,OA/BA;AA8EA;AACA,wBADA;AAEA,4BAFA;AAGA;AAHA;AA9EA;AAAA,GALA;AAyFA,SAzFA,qBAyFA;AACA;AACA;AACA;AACA;AACA;AACA,0BANA,CAOA;AACA;AACA;AACA;AACA;AACA;AACA,GAtGA;AAuGA;AACA,mBADA,6BACA;AACA;AAAA;AAAA;AACA;AAEA;AACA,wCACA;AACA,uCACA;AACA,KAVA;AAWA,gBAXA,wBAWA,IAXA,EAWA;AACA;AAAA;AAAA;AACA;AACA,KAdA;AAeA,WAfA,qBAeA;AAAA;;AACA,sDACA,IADA,CACA;AAAA,YACA,QADA,GACA,QADA,CACA,QADA;;AAEA;AACA;AACA;AACA,wBADA;AAEA;AAFA;AAKA;AACA;AACA,OAZA,WAaA;AAAA;AAAA,OAbA;AAcA,KA9BA;AA+BA,eA/BA,yBA+BA;AAAA;;AACA,iEACA,IADA,CACA;AAAA,YAEA,QAFA,GAEA,QAFA,CAEA,QAFA;;AAGA;AACA;AACA;AACA,wBADA;AAEA;AAFA;AAKA;AACA;AACA,OAbA,WAcA;AAAA;AAAA,OAdA;AAeA,KA/CA;AAgDA,YAhDA,sBAgDA;AAAA;;AACA,wBACA,GADA,CACA,cADA,EAEA,IAFA,CAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA,OAhBA,WAiBA;AAAA;AAAA,OAjBA;AAkBA,KAnEA;AAoEA,YApEA,sBAoEA;AAAA;;AACA,wBACA,GADA,CACA,6BADA,EAEA,IAFA,CAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA,OArBA,WAsBA;AAAA;AAAA,OAtBA;AAuBA,KA5FA;AA6FA,kBA7FA,4BA6FA;AAAA;;AACA,wBACA,GADA,CACA,mEADA,EAEA,IAFA,CAEA;AACA;AACA;AACA;AACA;AACA,OAPA,WAQA;AAAA;AAAA,OARA;AASA,KAvGA;AAwGA,sBAxGA,8BAwGA,IAxGA,EAwGA;AAAA;;AACA,wBACA,GADA,CACA,IADA,EAEA,IAFA,CAEA;AACA;AACA;AACA;AACA;AACA,OAPA,WAQA;AAAA;AAAA,OARA;AASA,KAlHA;AAmHA,qBAnHA,6BAmHA,KAnHA,EAmHA;AACA;AACA;AACA;AACA,OAFA;AAGA;AACA,KAzHA;AA0HA,QA1HA,gBA0HA,KA1HA,EA0HA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,oDACA,iBADA,GAEA,kBAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA,6DACA,IADA,CACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA,WATA,WAUA;AACA;AAAA;AAAA;AACA;AAEA,WAdA;AAeA;AACA,OAnBA,MAmBA;AACA;;AACA;AACA;AACA;AACA,yFACA,IADA,CACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA,WATA,WAUA;AACA;AAAA;AAAA;AACA;AAEA,WAdA;AAeA;AACA;AACA,KA/LA;AAgMA,eAhMA,uBAgMA,OAhMA,EAgMA;AACA;AACA;AAEA;AACA;AACA,OAFA;;AAIA;AACA;AAEA;AACA;AAEA;AACA,OAPA,MAOA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA,aAFA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAlOA;AAmOA,QAnOA,gBAmOA,IAnOA,EAmOA;AAAA;;AACA,wBACA,GADA,CACA,sCADA,EAEA,IAFA,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OA1BA,WA2BA;AAAA;AAAA,OA3BA;AA4BA,KAhQA;AAiQA,YAjQA,sBAiQA;AAAA;AACA,sBACA;AAEA;AACA;AACA;AACA,KAxQA;AAyQA,iBAzQA,2BAyQA;AACA;AACA;AAEA;AACA;AACA,KA/QA;AAgRA,eAhRA,uBAgRA,IAhRA,EAgRA;AACA;AACA;AACA;AACA;AAEA;AACA,OANA;AAOA,KAxRA;AAyRA,oBAzRA,4BAyRA,IAzRA,EAyRA,MAzRA,EAyRA,cAzRA,EAyRA,aAzRA,EAyRA;AACA;AACA;AACA;AAEA,uEACA,IADA,CACA;AACA;AACA;AACA;AACA,OALA,WAMA;AAAA;AAAA,OANA;AAOA,KArSA;AAsSA,sBAtSA,8BAsSA,KAtSA,EAsSA;AACA;AACA;AAAA;AAAA,WACA,IADA,CACA;AACA;AACA,SAHA,WAIA;AAAA;AAAA,SAJA;AAKA;AACA,KA9SA;AA+SA,kBA/SA,4BA+SA;AACA,+CACA,gCADA,IAEA,6BAFA,IAGA,oCAHA,IAIA,+BAJA,IAKA,gCALA,IAMA,iCANA,EAQA;AAEA;AACA,KA3TA;AA4TA,WA5TA,mBA4TA,IA5TA,EA4TA;AACA,2DACA;AAEA;AACA,KAjUA;AAkUA,sBAlUA,gCAkUA;AACA,gGACA,sCADA,IACA,sCADA,IAEA,oEAFA,EAEA;AACA,kDACA;AAAA;AAAA;AAEA,wDACA;AAAA;AAAA;AAEA,oDACA;AAAA;AAAA;AAEA,oDACA;AAAA;AAAA;AAEA,kFACA;AAAA;AAAA;AAEA;AACA;;AAEA;AACA,KAzVA;AA0VA,SA1VA,mBA0VA;AACA,2BACA;AACA,kCACA;AACA;AA/VA;AAvGA,G;;;;;;;;;;;ACxJA,2BAA2B,mBAAO,CAAC,sGAAqD;AACxF;AACA,UAAU,mBAAO,CAAC,kVAA+L;AACjN,UAAU,mBAAO,CAAC,sVAAiM;AACnN,UAAU,mBAAO,CAAC,oVAAgM;AAClN,UAAU,mBAAO,CAAC,sVAAiM;AACnN,UAAU,mBAAO,CAAC,wVAAkM;AACpN,UAAU,mBAAO,CAAC,gWAAsM;AACxN,UAAU,mBAAO,CAAC,kWAAuM;AACzN,UAAU,mBAAO,CAAC,8WAA6M;;AAE/N;AACA,cAAc,QAAS;;AAEvB;;;;;;;;;;;;;ACbA,cAAc,mBAAO,CAAC,+hBAAmT;;AAEzU,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,4GAAyD;;AAE9E;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACnBf;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,SAAS,oBAAoB,EAAE;AACpC;AACA;AACA;AACA,SAAS,SAAS,UAAU,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,oCAAoC,sCAAsC;AAC1E;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iCAAiC,gCAAgC;AACjE;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sCAAsC,kBAAkB;AACxD,gCAAgC,0CAA0C;AAC1E;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA,sCAAsC;AACtC,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kDAAkD;AAC7E;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,wBAAwB,6BAA6B;AACrD,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACldA;AAAA;AAAA;AAAA;AAAA;AAAyF;AAC3B;AACL;AACa;;;AAGtE;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,gFAAM;AACR,EAAE,qFAAM;AACR,EAAE,8FAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACvCf;AAAA;AAAA,wCAAgM,CAAgB,sPAAG,EAAC,C;;;;;;;;;;;;ACApN;AAAA;AAAA;AAAA;AAAmX,CAAgB,kYAAG,EAAC,C;;;;;;;;;;;;ACAvY;AAAA;AAAA;AAAA;AAAA;AAAA","file":"2.js","sourcesContent":["<template>\r\n  <v-row justify=\"center\">\r\n    <v-col md=\"8\">\r\n    <v-card v-if=\"user.show\">\r\n        <v-alert :type=\"toast.typeAlert\" v-if=\"toast.showAlert\" dismissible>\r\n            {{toast.message}}\r\n        </v-alert>\r\n        <v-card-title>Datos de usuario</v-card-title>\r\n        <v-card-text>\r\n            <v-form ref=\"crawlerForm\">\r\n                <v-text-field v-model=\"user.firstname\" label=\"Nombre\" />\r\n                <v-text-field v-model=\"user.lastname\" label=\"Apellido\" />\r\n                <v-text-field v-model=\"user.email\" label=\"Email\" />\r\n                <v-file-input v-model=\"user.profilePicture\" label=\"Foto de Perfil\" accept=\"image/*\"/>\r\n                <v-text-field v-model=\"user.urlReference\" label=\"Url Referencia\" reired />\r\n\r\n                <v-select\r\n                    :items=\"page.countries\"\r\n                    @change=\"populateProvinces\"\r\n                    v-model=\"user.country\"\r\n                    item-text=\"name\"\r\n                    item-value=\"id\"\r\n                    label=\"PaÃ­s\"\r\n                ></v-select>\r\n                <v-select\r\n                    :items=\"page.provinces\"\r\n                    v-model=\"user.province\"\r\n                    item-text=\"name\"\r\n                    item-value=\"id\"\r\n                    label=\"Provincia\"\r\n                ></v-select>\r\n            </v-form>\r\n        </v-card-text>\r\n    </v-card>\r\n      <v-card>\r\n        <v-card-title>Experiencia</v-card-title>\r\n        <v-form ref=\"form\" @submit=\"save($event)\">\r\n          <v-card-text>\r\n              <v-autocomplete\r\n                v-if=\"page.selectUser\"\r\n                v-model=\"experience.userOwner\"\r\n                :items=\"page.activeUsers\"\r\n                @input=\"showUserData\"\r\n                item-text=\"name\"\r\n                item-value=\"id\"\r\n                outlined\r\n                dense\r\n                label=\"Usuario\"\r\n            ></v-autocomplete>\r\n              <v-autocomplete\r\n                v-model=\"experience.channel\"\r\n                :items=\"page.channels\"\r\n                item-text=\"text\"\r\n                item-value=\"value\"\r\n                outlined\r\n                dense\r\n                chips\r\n                small-chips\r\n                label=\"Canales\"\r\n                required\r\n            ></v-autocomplete>\r\n            <v-file-input v-model=\"experience.image\" label=\"Imagen Principal\" accept=\"image/*\" required/>\r\n            <v-text-field v-model=\"experience.title\" label=\"Titulo\" required />\r\n            <vue-editor id=\"editor\" useCustomImageHandler @image-added=\"handleImageAdded\" @image-removed=\"handleImageRemoved\" v-model=\"experience.description\" style=\"height:500px\"> </vue-editor>\r\n            <div style=\"width:100%;height:100px\"></div>\r\n            <v-text-field v-model=\"experience.video\" label=\"Video\" type=\"url\" placeholder=\"https://example.com\"/>\r\n            <v-autocomplete\r\n                v-model=\"experience.tag_search\"\r\n                :items=\"page.tags\"\r\n                item-text=\"text\"\r\n                item-value=\"value\"\r\n                outlined\r\n                dense\r\n                chips\r\n                small-chips\r\n                label=\"Tags\"\r\n                multiple\r\n                required\r\n            ></v-autocomplete>\r\n            <v-autocomplete\r\n                v-model=\"experience.status\"\r\n                :items=\"experience.statusList\"\r\n                item-text=\"text\"\r\n                item-value=\"value\"\r\n                outlined\r\n                dense\r\n                label=\"Estado\"\r\n                required\r\n            ></v-autocomplete>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"primary\" type=\"submit\" ref=\"btnSub\">Guardar</v-btn>\r\n          </v-card-actions>\r\n        </v-form>\r\n        <v-data-table\r\n            :headers=\"page.headers\"\r\n            :items=\"page.items\"\r\n            :footer-props=\"page.footerProps\"\r\n            :search=\"page.search\"\r\n            class=\"elevation-1\"\r\n            :page.sync=\"page.page\"\r\n            :items-per-page=\"page.itemsPerPage\"\r\n            hide-default-footer\r\n        >\r\n            <template v-slot:item.id=\"{ item }\">\r\n                <strong>{{item.id}}</strong>\r\n            </template>\r\n            <template v-slot:item.title=\"{ item }\">\r\n                {{item.title}}\r\n            </template>\r\n            <template v-slot:item.status=\"{ item }\">\r\n                <strong :class=\"page.status_colors[`${item.status}`]\">{{page.statusList[item.status]}}</strong>\r\n            </template>\r\n            <template v-slot:item.user_id=\"{ item }\">\r\n                {{item.user.email}}\r\n            </template>\r\n            <template v-slot:item.created_at=\"{ item }\">\r\n                <strong>{{item.created_at}}</strong>\r\n            </template>\r\n            <template v-slot:item.edit=\"{ item }\">\r\n                <v-btn icon x-small @click=\"edit(item)\" color=\"warning\"\r\n                    ><v-icon>fa fa-pencil-alt</v-icon>\r\n                </v-btn>\r\n            </template>\r\n        </v-data-table>\r\n        <v-pagination\r\n            v-model=\"page.page\"\r\n            :length=\"page.pageCount\"\r\n            @input=\"gotoPage\"\r\n        ></v-pagination>\r\n        <v-select\r\n            :items=\"page.perPageOptions\"\r\n            @change=\"changePerPage\"\r\n            v-model=\"page.itemsPerPage\"\r\n            item-text=\"item\"\r\n            item-value=\"item\"\r\n            label=\"Elementos por pÃ¡gina\"\r\n            width=\"600\"\r\n        ></v-select>\r\n      </v-card>\r\n    </v-col>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue';\r\nimport { VueEditor, Quill } from \"vue2-editor\";\r\nimport VueToast from 'vue-toast-notification';\r\nimport 'vue-toast-notification/dist/theme-default.css';\r\nVue.use(VueToast);\r\n\r\nexport default {\r\n    name: \"Experience\",\r\n    components: {\r\n        VueEditor\r\n    },\r\n    data: () => ({\r\n        user: {\r\n            show: false,\r\n            id: null,\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            email: \"\",\r\n            urlReference: \"\",\r\n            country: null,\r\n            province: null,\r\n            profilePicture: undefined\r\n        },\r\n        experience: {\r\n            userOwner: 0,\r\n            mode: 'create',\r\n            id: null,\r\n            title: '',\r\n            description: '',\r\n            image: undefined,\r\n            incrustedImages: [],\r\n            video: undefined,\r\n            tag_search: [],\r\n            channel: undefined,\r\n            status: 1,\r\n            statusList: [\r\n                {value: 0, text: 'Pendiente' },\r\n                {value: 1, text: 'Activo' },\r\n                {value: 2, text: 'Desactivado' },\r\n                {value: 3, text: 'Eliminado' }\r\n            ]\r\n        },\r\n        page: {\r\n            selectUser: false,\r\n            allExperiences: undefined,\r\n            activeUsers: [],\r\n            allUsersData: undefined,\r\n            tags: [],\r\n            channels: [],\r\n            countries: [],\r\n            provinces: [],\r\n            allZones: [],\r\n            page: 1,\r\n            pageCount: 0,\r\n            path: \"\",\r\n            itemsPerPage: 25,\r\n            perPageOptions: [25, 50, 100, 500, 'Todos'],\r\n            items: undefined,\r\n            headers: [\r\n                {\r\n                    text: 'Id',\r\n                    align: 'start',\r\n                    sortable: false,\r\n                    value: 'id',\r\n                },\r\n                { text: 'TÃ­tulo', value: 'title' },\r\n                { text: 'Estado', value: 'status' },\r\n                { text: 'Usuario', value: 'user_id' },\r\n                { text: 'Fecha de creacÃ­on', value: 'created_at' },\r\n                { text: '', value: 'edit' }\r\n            ],\r\n            search: \"\",\r\n            footerProps: {\r\n                'items-per-page-options': [25, 50, 100, 500, -1],\r\n                'items-per-page': 25\r\n            },\r\n            statusList: [\r\n                'Pendiente',\r\n                'Activo',\r\n                'Desactivado',\r\n                'Eliminado'\r\n            ],\r\n            status_colors: [\r\n                \"warning--text\",\r\n                \"primary--text\",\r\n                \"accent--text\",\r\n                \"error--text\"\r\n            ]\r\n        },\r\n        toast: {\r\n            showAlert: false,\r\n            typeAlert: 'success',\r\n            message: ''\r\n        }\r\n    }),\r\n    mounted() {\r\n        this.computeSections();\r\n        this.getTags();\r\n        this.getChannels();\r\n        this.getZones();\r\n        this.getUsers();\r\n        this.getExperiences();\r\n        //console.log(localStorage.user);\r\n        //console.log(this.$store.getters.user);\r\n        //console.log(localStorage.userEmail);\r\n        //console.log(localStorage.userFirstname);\r\n        //console.log(localStorage.userLastname);\r\n        //console.log(localStorage.userPublic);\r\n    },\r\n    methods: {\r\n        computeSections() {\r\n            let roles = this.$store.getters.user.roles.map(i => i.name);\r\n            this.page.selectUser = roles.indexOf('Admin') >= 0 ? true : false;\r\n\r\n            this.user.show = false;\r\n            if(localStorage.userPublic == 0)\r\n                this.user.show = true;\r\n            if(roles.indexOf('Admin') >= 0)\r\n                this.user.show = false;\r\n        },\r\n        showUserData(item) {\r\n            let user = this.allUsersData.filter(u => {return u.id == item})[0];\r\n            this.user.show = user.profile.public == 0 ? true : false;\r\n        },\r\n        getTags() {\r\n            this.$api.request.get('/admin/list_tag_search')\r\n                .then(res => {\r\n                    const {response} = res.data;\r\n                    for (const key in response) {\r\n                        if (response.hasOwnProperty(key)) {\r\n                            this.page.tags.push({\r\n                                value: key,\r\n                                text: response[key]\r\n                            })\r\n                            \r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => console.error(err))\r\n        },\r\n        getChannels() {\r\n            this.$api.request.get('/admin/channels/get_channels_list')\r\n                .then(res => {\r\n                    \r\n                    const {response} = res.data;\r\n                    for (let key in response) {\r\n                        if (response.hasOwnProperty(key)) {\r\n                            this.page.channels.push({\r\n                                value: key,\r\n                                text: response[key]\r\n                            })\r\n                            \r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => console.error(err))\r\n        },\r\n        getZones() {\r\n            this.$api.request\r\n                .get(\"/admin/zones\")\r\n                .then(res => {\r\n                    let data = [];\r\n\r\n                    let a = res.data.response;\r\n                    this.page.allZones = a;\r\n\r\n                    for (const key in a) {\r\n                        if (a.hasOwnProperty(key)) {\r\n                            const element = a[key];\r\n                            data.push({ id: element.id, name: element.name });\r\n                        }\r\n                    }\r\n\r\n                    this.page.countries = data;\r\n                })\r\n                .catch(err => console.log(\"err >>\", err));\r\n        },\r\n        getUsers() {\r\n            this.$api.request\r\n                .get(\"/admin/get_all_active_users\")\r\n                .then(res => {\r\n                    let data = [];\r\n\r\n                    data.push({ id: 0, name: 'Actual' });\r\n\r\n                    let a = res.data.response;\r\n                    this.allUsersData = a;\r\n\r\n                    for (const key in a) {\r\n                        if (a.hasOwnProperty(key)) {\r\n                            const element = a[key];\r\n\r\n                            let value = element.email + \" (\" + (element.profile.public == 0 ? 'Perfil no pÃºblico' : 'Perfil pÃºblico') + \")\";\r\n\r\n                            data.push({ id: element.id, name: value });\r\n                        }\r\n                    }\r\n\r\n                    this.page.activeUsers = data;\r\n                })\r\n                .catch(err => console.log(\"err >>\", err));\r\n        },\r\n        getExperiences() {\r\n            this.$api.request\r\n            .get(\"/admin/experiences?page=1&perPage=\"+this.$data.page.itemsPerPage)\r\n                .then(res => {\r\n                    this.$data.page.items = this.formatDates(res.data.response.data);\r\n                    this.page.allExperiences = this.$data.page.items;\r\n                    this.$data.page.pageCount = res.data.response.last_page;\r\n                    this.$data.page.path = res.data.response.path;\r\n                })\r\n                .catch(err => console.log(\"err >>\", err));\r\n        },\r\n        getExperiencesPage(page) {\r\n            this.$api.request\r\n            .get(page)\r\n                .then(res => {\r\n                    this.$data.page.items = this.formatDates(res.data.response.data);\r\n                    this.page.allExperiences = this.$data.page.items;\r\n                    this.$data.page.pageCount = res.data.response.last_page;\r\n                    this.$data.page.path = res.data.response.path;\r\n                })\r\n                .catch(err => console.log(\"err >>\", err));\r\n        },\r\n        populateProvinces(value) {\r\n            this.user.province = null;\r\n            let c = this.page.allZones.filter((i) => {\r\n                return i.id == value;\r\n            });\r\n            this.page.provinces = c[0].children;\r\n        },\r\n        save(event) {\r\n            event.preventDefault();\r\n            this.experience.userOwner;\r\n            let data = new FormData();\r\n                data.append('title', this.experience.title);\r\n                data.append('description', this.experience.description);\r\n                data.append('image', this.experience.image);\r\n                data.append('incrustedImages', JSON.stringify(this.experience.incrustedImages))\r\n                data.append('video', (this.experience.video =! undefined ? this.experience.video : \"\"));\r\n                data.append('channel', this.experience.channel);\r\n                data.append('status', this.experience.status);\r\n                data.append('owner', this.experience.userOwner);\r\n                for(let i = 0; i < this.experience.tag_search.length; i++ ) {\r\n                    data.append('tag_search[]', this.experience.tag_search[i]);\r\n                }\r\n                if(this.hasCrawlerData()){\r\n                    let userZone = this.user.province == null ?\r\n                                this.user.country :\r\n                                this.user.province;\r\n                    data.append('userFirstname', this.user.firstname);\r\n                    data.append('userLastname', this.user.lastname);\r\n                    data.append('userEmail', this.user.email);\r\n                    data.append('userUrlReference', this.user.urlReference);\r\n                    data.append('userZone', userZone);\r\n                    data.append('userProfilePicture', this.user.profilePicture);\r\n                    data.append('userId', this.user.id);\r\n                }\r\n\r\n            if(this.experience.id == null) {\r\n                this.experience.mode = 'store';\r\n                if(this.validateExperience()){\r\n                    this.$api.request.post('/admin/experiences', data)\r\n                        .then(res => {\r\n                            this.reset();\r\n                            this.experience.description = \"\";\r\n                            this.experience.id = null;\r\n                            this.experience.mode = 'create';\r\n                            this.user.id = null;\r\n                            Vue.$toast.success('Experiencia guardada con exito', {position: 'top'});\r\n                            this.getExperiences()\r\n                        })\r\n                        .catch(err => {\r\n                            Vue.$toast.error('Ha ocurrido un error inesperado', {position: 'top'});\r\n                            console.error(err);\r\n\r\n                        });\r\n                }\r\n            }else{\r\n                this.experience.mode = 'update';\r\n                if(this.validateExperience()){\r\n                    data.append('_method', 'put');\r\n                    data.append('id', this.experience.id);\r\n                    this.$api.request.post(`/admin/experiences/${this.experience.id}`, data)\r\n                        .then(res => {\r\n                            this.reset();\r\n                            this.experience.description = \"\";\r\n                            this.experience.id = null;\r\n                            this.experience.mode = 'create';\r\n                            this.user.id = null;\r\n                            Vue.$toast.success('Experiencia guardada con exito', {position: 'top'});\r\n                            this.getExperiences();\r\n                        })\r\n                        .catch(err => {\r\n                            Vue.$toast.error('Ha ocurrido un error inesperado', {position: 'top'});\r\n                            console.error(err);\r\n\r\n                        });\r\n                }\r\n            }\r\n        },\r\n        setUserZone(zone_id) {\r\n            let zones = this.page.allZones;\r\n            let userZone = zone_id;\r\n\r\n            let filterZones = zones.filter((i) => {\r\n                return i.id == userZone;\r\n            });\r\n\r\n            if(filterZones.length > 0){\r\n                let z = filterZones[0];\r\n\r\n                this.user.country = z.id;\r\n                this.populateProvinces(z.id);\r\n\r\n                return;\r\n            }else{\r\n                let country = null;\r\n                for(let j in zones){\r\n                    country = zones[j].id;\r\n                    if(zones[j].children != undefined){\r\n                        let filterChildren = zones[j].children.filter((i) => {\r\n                            return i.id == userZone;\r\n                        });\r\n\r\n                        if(filterChildren.length > 0){\r\n                            let p = filterChildren[0];\r\n                            this.user.country = country;\r\n                            this.populateProvinces(country);\r\n                            this.user.province = p.id;\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        edit(item) {\r\n            this.$api.request\r\n            .get('admin/get_crawler_data?id='+item.id)\r\n                .then(res => {\r\n                    if(res.data.user != false){\r\n                        let user = res.data.user;\r\n\r\n                        this.user.firstname = user.firstname;\r\n                        this.user.lastname = user.lastname;\r\n                        this.user.email = user.email;\r\n                        this.user.urlReference = user.referrer_url;\r\n                        this.user.id = user.id;\r\n                        this.setUserZone(user.zone_id);\r\n                    }\r\n\r\n                    let exp = this.page.allExperiences.filter(e => { return e.id == item.id })[0];\r\n                    let tags = exp.tag_search.map(e => { return String(e.id)});\r\n\r\n                    this.experience.channel = String(exp.channel_id);\r\n                    this.experience.title = exp.title;\r\n                    this.experience.description = exp.description;\r\n                    this.experience.video = exp.video;\r\n                    this.experience.tag_search = tags;\r\n                    this.experience.status = exp.status;\r\n                    this.experience.id = exp.id;\r\n                    this.experience.userOwner = exp.user_id;\r\n                    this.experience.mode = 'edit';\r\n                })\r\n                .catch(err => console.log(\"err >>\", err));\r\n        },\r\n        gotoPage(value = 0) {\r\n            if(value == 0)\r\n                value = this.$data.page.page;\r\n\r\n            let page = this.$data.page.path + \"?page=\" + value + \"&perPage=\" + this.$data.page.itemsPerPage;\r\n            this.$data.page.page = value;\r\n            this.getExperiencesPage(page);\r\n        },\r\n        changePerPage() {\r\n            let i = this.$data.page.itemsPerPage;\r\n            let p = this.$data.page.page;\r\n\r\n            let page = this.$data.page.path + \"?page=\" + p + \"&perPage=\" + i;\r\n            this.getExperiencesPage(page);\r\n        },\r\n        formatDates(data) {\r\n            return data.filter(i => {\r\n                let date = new Date(i.created_at);\r\n                let createdAt = date.getDate()+\"/\"+(date.getMonth()+1)+\"/\"+date.getFullYear();\r\n                i.created_at = createdAt;\r\n\r\n                return i;\r\n            });\r\n        },\r\n        handleImageAdded(file, Editor, cursorLocation, resetUploader) {\r\n            var formData = new FormData();\r\n            formData.append(\"image\", file);\r\n            formData.append('title', this.experience.title);\r\n            \r\n            this.$api.request.post('/admin/save_experience_image', formData)\r\n                .then(result => {\r\n                    let url = result.data.url;\r\n                    Editor.insertEmbed(cursorLocation, \"image\", url);\r\n                    resetUploader();\r\n                })\r\n                .catch(err => console.error(err));\r\n        },\r\n        handleImageRemoved(image) {\r\n            if(this.experience.mode == 'create' && this.experience.description.search(image) == -1 && this.experience.description.length > 0){\r\n                this.$api.request.post('/admin/delete_experience_image', {path: image})\r\n                    .then(result => {\r\n                        console.log(result);\r\n                    })\r\n                    .catch(err => console.error(err));\r\n            }\r\n        },\r\n        hasCrawlerData() {\r\n            if(this.hasData(this.user.firstname)\r\n                || this.hasData(this.user.lastname)\r\n                || this.hasData(this.user.email)\r\n                || this.hasData(this.user.urlReference)\r\n                || this.hasData(this.user.country)\r\n                || this.hasData(this.user.province)\r\n                || this.hasData(this.profilePicture)\r\n            )\r\n                return true;\r\n\r\n            return false;\r\n        },\r\n        hasData(data) {\r\n            if(data != \"\" && data != null && data != undefined)\r\n                return true;\r\n            \r\n            return false;\r\n        },\r\n        validateExperience() {\r\n            if(!this.hasData(this.experience.title) || !this.hasData(this.experience.description) ||\r\n            this.experience.tag_search.length == 0 || !this.hasData(this.experience.channel) ||\r\n            (!this.hasData(this.experience.status) && this.experience.status != 0)){\r\n                if(!this.hasData(this.experience.title))\r\n                    Vue.$toast.error('Complete el campo TÃ­tulo', {position: 'top'});\r\n                \r\n                if(!this.hasData(this.experience.description))\r\n                    Vue.$toast.error('Complete el campo DescripciÃ³n', {position: 'top'});\r\n\r\n                if(this.experience.tag_search.length == 0)\r\n                    Vue.$toast.error('Complete el campo Tags', {position: 'top'});\r\n\r\n                if(!this.hasData(this.experience.channel))\r\n                    Vue.$toast.error('Complete el campo Canal', {position: 'top'});\r\n\r\n                if(!this.hasData(this.experience.status) && this.experience.status != 0)\r\n                    Vue.$toast.error('Complete el campo Estado', {position: 'top'});\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n        reset() {\r\n            if(this.$refs.form)\r\n                this.$refs.form.reset();\r\n            if(this.$refs.crawlerForm)\r\n                this.$refs.crawlerForm.reset();\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n    @import \"../../../../node_modules/@syncfusion/ej2-base/styles/material.css\";\r\n    @import \"../../../../node_modules/@syncfusion/ej2-inputs/styles/material.css\";\r\n    @import \"../../../../node_modules/@syncfusion/ej2-lists/styles/material.css\";\r\n    @import \"../../../../node_modules/@syncfusion/ej2-popups/styles/material.css\";\r\n    @import \"../../../../node_modules/@syncfusion/ej2-buttons/styles/material.css\";\r\n    @import \"../../../../node_modules/@syncfusion/ej2-navigations/styles/material.css\";\r\n    @import \"../../../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\";\r\n    @import \"../../../../node_modules/@syncfusion/ej2-vue-richtexteditor/styles/material.css\";\r\n</style>","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-base/styles/material.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-inputs/styles/material.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-lists/styles/material.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-popups/styles/material.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-buttons/styles/material.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-navigations/styles/material.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-splitbuttons/styles/material.css\"), \"\");\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/@syncfusion/ej2-vue-richtexteditor/styles/material.css\"), \"\");\n\n// module\nexports.push([module.id, \"\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--5-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=style&index=0&lang=css&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--5-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=style&index=0&lang=css&\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--5-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=style&index=0&lang=css&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-row\",\n    { attrs: { justify: \"center\" } },\n    [\n      _c(\n        \"v-col\",\n        { attrs: { md: \"8\" } },\n        [\n          _vm.user.show\n            ? _c(\n                \"v-card\",\n                [\n                  _vm.toast.showAlert\n                    ? _c(\n                        \"v-alert\",\n                        {\n                          attrs: { type: _vm.toast.typeAlert, dismissible: \"\" }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n          \" +\n                              _vm._s(_vm.toast.message) +\n                              \"\\n      \"\n                          )\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"v-card-title\", [_vm._v(\"Datos de usuario\")]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-card-text\",\n                    [\n                      _c(\n                        \"v-form\",\n                        { ref: \"crawlerForm\" },\n                        [\n                          _c(\"v-text-field\", {\n                            attrs: { label: \"Nombre\" },\n                            model: {\n                              value: _vm.user.firstname,\n                              callback: function($$v) {\n                                _vm.$set(_vm.user, \"firstname\", $$v)\n                              },\n                              expression: \"user.firstname\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"v-text-field\", {\n                            attrs: { label: \"Apellido\" },\n                            model: {\n                              value: _vm.user.lastname,\n                              callback: function($$v) {\n                                _vm.$set(_vm.user, \"lastname\", $$v)\n                              },\n                              expression: \"user.lastname\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"v-text-field\", {\n                            attrs: { label: \"Email\" },\n                            model: {\n                              value: _vm.user.email,\n                              callback: function($$v) {\n                                _vm.$set(_vm.user, \"email\", $$v)\n                              },\n                              expression: \"user.email\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"v-file-input\", {\n                            attrs: {\n                              label: \"Foto de Perfil\",\n                              accept: \"image/*\"\n                            },\n                            model: {\n                              value: _vm.user.profilePicture,\n                              callback: function($$v) {\n                                _vm.$set(_vm.user, \"profilePicture\", $$v)\n                              },\n                              expression: \"user.profilePicture\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"v-text-field\", {\n                            attrs: { label: \"Url Referencia\", reired: \"\" },\n                            model: {\n                              value: _vm.user.urlReference,\n                              callback: function($$v) {\n                                _vm.$set(_vm.user, \"urlReference\", $$v)\n                              },\n                              expression: \"user.urlReference\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"v-select\", {\n                            attrs: {\n                              items: _vm.page.countries,\n                              \"item-text\": \"name\",\n                              \"item-value\": \"id\",\n                              label: \"PaÃ­s\"\n                            },\n                            on: { change: _vm.populateProvinces },\n                            model: {\n                              value: _vm.user.country,\n                              callback: function($$v) {\n                                _vm.$set(_vm.user, \"country\", $$v)\n                              },\n                              expression: \"user.country\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"v-select\", {\n                            attrs: {\n                              items: _vm.page.provinces,\n                              \"item-text\": \"name\",\n                              \"item-value\": \"id\",\n                              label: \"Provincia\"\n                            },\n                            model: {\n                              value: _vm.user.province,\n                              callback: function($$v) {\n                                _vm.$set(_vm.user, \"province\", $$v)\n                              },\n                              expression: \"user.province\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"v-card\",\n            [\n              _c(\"v-card-title\", [_vm._v(\"Experiencia\")]),\n              _vm._v(\" \"),\n              _c(\n                \"v-form\",\n                {\n                  ref: \"form\",\n                  on: {\n                    submit: function($event) {\n                      return _vm.save($event)\n                    }\n                  }\n                },\n                [\n                  _c(\n                    \"v-card-text\",\n                    [\n                      _vm.page.selectUser\n                        ? _c(\"v-autocomplete\", {\n                            attrs: {\n                              items: _vm.page.activeUsers,\n                              \"item-text\": \"name\",\n                              \"item-value\": \"id\",\n                              outlined: \"\",\n                              dense: \"\",\n                              label: \"Usuario\"\n                            },\n                            on: { input: _vm.showUserData },\n                            model: {\n                              value: _vm.experience.userOwner,\n                              callback: function($$v) {\n                                _vm.$set(_vm.experience, \"userOwner\", $$v)\n                              },\n                              expression: \"experience.userOwner\"\n                            }\n                          })\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"v-autocomplete\", {\n                        attrs: {\n                          items: _vm.page.channels,\n                          \"item-text\": \"text\",\n                          \"item-value\": \"value\",\n                          outlined: \"\",\n                          dense: \"\",\n                          chips: \"\",\n                          \"small-chips\": \"\",\n                          label: \"Canales\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.experience.channel,\n                          callback: function($$v) {\n                            _vm.$set(_vm.experience, \"channel\", $$v)\n                          },\n                          expression: \"experience.channel\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"v-file-input\", {\n                        attrs: {\n                          label: \"Imagen Principal\",\n                          accept: \"image/*\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.experience.image,\n                          callback: function($$v) {\n                            _vm.$set(_vm.experience, \"image\", $$v)\n                          },\n                          expression: \"experience.image\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"v-text-field\", {\n                        attrs: { label: \"Titulo\", required: \"\" },\n                        model: {\n                          value: _vm.experience.title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.experience, \"title\", $$v)\n                          },\n                          expression: \"experience.title\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"vue-editor\", {\n                        staticStyle: { height: \"500px\" },\n                        attrs: { id: \"editor\", useCustomImageHandler: \"\" },\n                        on: {\n                          \"image-added\": _vm.handleImageAdded,\n                          \"image-removed\": _vm.handleImageRemoved\n                        },\n                        model: {\n                          value: _vm.experience.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.experience, \"description\", $$v)\n                          },\n                          expression: \"experience.description\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"div\", {\n                        staticStyle: { width: \"100%\", height: \"100px\" }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          label: \"Video\",\n                          type: \"url\",\n                          placeholder: \"https://example.com\"\n                        },\n                        model: {\n                          value: _vm.experience.video,\n                          callback: function($$v) {\n                            _vm.$set(_vm.experience, \"video\", $$v)\n                          },\n                          expression: \"experience.video\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"v-autocomplete\", {\n                        attrs: {\n                          items: _vm.page.tags,\n                          \"item-text\": \"text\",\n                          \"item-value\": \"value\",\n                          outlined: \"\",\n                          dense: \"\",\n                          chips: \"\",\n                          \"small-chips\": \"\",\n                          label: \"Tags\",\n                          multiple: \"\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.experience.tag_search,\n                          callback: function($$v) {\n                            _vm.$set(_vm.experience, \"tag_search\", $$v)\n                          },\n                          expression: \"experience.tag_search\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"v-autocomplete\", {\n                        attrs: {\n                          items: _vm.experience.statusList,\n                          \"item-text\": \"text\",\n                          \"item-value\": \"value\",\n                          outlined: \"\",\n                          dense: \"\",\n                          label: \"Estado\",\n                          required: \"\"\n                        },\n                        model: {\n                          value: _vm.experience.status,\n                          callback: function($$v) {\n                            _vm.$set(_vm.experience, \"status\", $$v)\n                          },\n                          expression: \"experience.status\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-card-actions\",\n                    [\n                      _c(\"v-spacer\"),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-btn\",\n                        {\n                          ref: \"btnSub\",\n                          attrs: { color: \"primary\", type: \"submit\" }\n                        },\n                        [_vm._v(\"Guardar\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"v-data-table\", {\n                staticClass: \"elevation-1\",\n                attrs: {\n                  headers: _vm.page.headers,\n                  items: _vm.page.items,\n                  \"footer-props\": _vm.page.footerProps,\n                  search: _vm.page.search,\n                  page: _vm.page.page,\n                  \"items-per-page\": _vm.page.itemsPerPage,\n                  \"hide-default-footer\": \"\"\n                },\n                on: {\n                  \"update:page\": function($event) {\n                    return _vm.$set(_vm.page, \"page\", $event)\n                  }\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"item.id\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [_c(\"strong\", [_vm._v(_vm._s(item.id))])]\n                    }\n                  },\n                  {\n                    key: \"item.title\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _vm._v(\n                          \"\\n              \" +\n                            _vm._s(item.title) +\n                            \"\\n          \"\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"item.status\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"strong\",\n                          { class: _vm.page.status_colors[\"\" + item.status] },\n                          [_vm._v(_vm._s(_vm.page.statusList[item.status]))]\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"item.user_id\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _vm._v(\n                          \"\\n              \" +\n                            _vm._s(item.user.email) +\n                            \"\\n          \"\n                        )\n                      ]\n                    }\n                  },\n                  {\n                    key: \"item.created_at\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [_c(\"strong\", [_vm._v(_vm._s(item.created_at))])]\n                    }\n                  },\n                  {\n                    key: \"item.edit\",\n                    fn: function(ref) {\n                      var item = ref.item\n                      return [\n                        _c(\n                          \"v-btn\",\n                          {\n                            attrs: {\n                              icon: \"\",\n                              \"x-small\": \"\",\n                              color: \"warning\"\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.edit(item)\n                              }\n                            }\n                          },\n                          [_c(\"v-icon\", [_vm._v(\"fa fa-pencil-alt\")])],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"v-pagination\", {\n                attrs: { length: _vm.page.pageCount },\n                on: { input: _vm.gotoPage },\n                model: {\n                  value: _vm.page.page,\n                  callback: function($$v) {\n                    _vm.$set(_vm.page, \"page\", $$v)\n                  },\n                  expression: \"page.page\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"v-select\", {\n                attrs: {\n                  items: _vm.page.perPageOptions,\n                  \"item-text\": \"item\",\n                  \"item-value\": \"item\",\n                  label: \"Elementos por pÃ¡gina\",\n                  width: \"600\"\n                },\n                on: { change: _vm.changePerPage },\n                model: {\n                  value: _vm.page.itemsPerPage,\n                  callback: function($$v) {\n                    _vm.$set(_vm.page, \"itemsPerPage\", $$v)\n                  },\n                  expression: \"page.itemsPerPage\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./Experience.vue?vue&type=template&id=0fc47236&\"\nimport script from \"./Experience.vue?vue&type=script&lang=js&\"\nexport * from \"./Experience.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Experience.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Ezequiel\\\\Projects\\\\Experendia\\\\experendia-backend\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0fc47236')) {\n      api.createRecord('0fc47236', component.options)\n    } else {\n      api.reload('0fc47236', component.options)\n    }\n    module.hot.accept(\"./Experience.vue?vue&type=template&id=0fc47236&\", function () {\n      api.rerender('0fc47236', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/pages/experience/Experience.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../node_modules/style-loader/index.js!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--5-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/style-loader/index.js!../../../../node_modules/css-loader/index.js??ref--5-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--5-2!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experience.vue?vue&type=template&id=0fc47236&\""],"sourceRoot":""}